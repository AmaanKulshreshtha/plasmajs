#! /usr/bin/env node


const path= require('path');
// const defConf= {
// 	presets: [ 'es2015', 'react' ],
// 	plugins: [ 'transform-object-rest-spread' ]
// };

require('@babel/register')({

	ignore: (name) => {

		if(name.includes('node_modules/plasmajs')) {
			return false;
		}

		if(name.includes('node_modules')) {
			return true;
		}

		return false;
	}
});


// 
// TODO: Add more command-line arguments for more configurations
// 
if(process.argv.length < 3) {
	console.log('Usage: plasmajs ./your-server.js');
	process.exit(0);
}

const fileName = process.argv[2];

let App;

try {

	App= require(path.resolve(fileName)).default;
	
	if(!App) {
		throw new Error("You need to export a React component class");
	}

} catch(e) {

	console.error("ERROR:", e);

	process.exit(1);
}


// NodeServer class
const NodeServer= App.NodeServer || require('./app.jsx').NodeServer;

// Creates and starts a new server instance
function startNewServer() {

	const plasmaJSServer= new NodeServer(App);

	return plasmaJSServer.createServer().start();
}


// If the user has enabled cluster in the app
if(App.cluster && typeof App.cluster === 'object') {

	const cluster= require('cluster');

	if(cluster.isMaster) {
		
		for(let i= 0; i< App.cluster.count; i++) {
			cluster.fork();
		}

		if(typeof App.cluster.master === 'function') {
			App.cluster.master();
		}

		cluster.on('exit', ()=> {
			cluster.fork();
		});

	} else {

		startNewServer();

		if(typeof App.cluster.notMaster === 'function') {
			App.cluster.notMaster();
		}
	}

} else {
	startNewServer();	
}


